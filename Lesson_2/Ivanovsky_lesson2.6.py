# *Реализовать структуру данных «Товары». Она должна представлять собой список кортежей.
# Каждый кортеж хранит информацию об отдельном товаре. В кортеже должно быть два
# элемента — номер товара и словарь с параметрами, то есть характеристиками товара:
# "название, цена, количество, единица измерения".
# Структуру нужно сформировать программно, запросив все данные у пользователя.
#
# Нужно собрать аналитику о товарах. Реализовать словарь, в котором каждый ключ —
# характеристика товара, например, название. Тогда значение — список
# значений-характеристик, например, список названий товаров.

i = 1
goods = []
''' Test Data
goods.append(tuple([1, {"название": "компьютер", "цена": 20000, "количество": 5, "ед. измерения": "шт"}]))
goods.append(tuple([2, {"название": "принтер", "цена": 6000, "количество": 2, "ед. измерения": "шт"}]))
goods.append(tuple([3, {"название": "сканер", "цена": 2000, "количество": 7, "ед. измерения": "шт"}]))
'''

while True:
    name = input(f"Введите название товара №{i}: ")
    price = input(f"Введите цену товара №{i}: ")
    amount = input(f"Введите кол-во товара №{i}: ")
    unit_of_measure = input(f"Введите единицу измерения товара №{i}: ")
    position=tuple([i,{"название":name,"цена":price,"количество":amount,"ед. измерения":unit_of_measure}])
    goods.append(position)
    i+=1
    next_good=input("Вводим ещё? (Д/Н) ")
    if next_good.upper()!="Д":
        break

# Получилось сложно, подскажите, можно ли сделать проще.
# Я разложу по шагам, чтобы объяснить, как я выполнял преобразование
# Мне очень хотелось воспользоваться функцией zip(), но для этого надо подготовить данные
# 1. Сначала надо выделить словари.
#    Я попробовал что-то типа goods[0:<кол-во элементов>][1], но так не работает
#    И пришлось задействовать цикл
list_with_pure_dictionaries = list(k[1] for k in goods)

# 2. Если загнать получившийся список в zip, то он транспонирует только ключи, а нам нужны значения
#    Благо, по условиям задачи, структуры словарей совпадают
#    Поэтому формируем из словарей список со списками значений
list_with_dict_values = list(map(lambda x: x.values(), list_with_pure_dictionaries))

# 3. Собственно zip
analytics = list(zip(*list_with_dict_values))

# 4. Дальше возьмём первый товар (он всегда есть) и вытащим оттуда названия характеристик, чтобы не вводить
goods_parameters = list(goods[0][1].keys())

# 5. Формируем итоговый словарь
#    Используем list(dict.fromkeys(analytics[i])), чтобы удалить дубли
#    (я не использую преобразование к множеству из-за того, что сбивается порядок)
final_dict = dict([(goods_parameters[i], list(dict.fromkeys(analytics[i]))) for i in range(len(analytics))])

print("\nАналитика:")
for key, value in final_dict.items():
    print(f"{key}:{value}")

# Создайте собственный класс-исключение, который должен проверять содержимое списка на # наличие только чисел.
# Проверить работу исключения на реальном примере.
# Запрашивать у пользователя данные и заполнять список необходимо только числами.
# Класс-исключение должен контролировать типы данных элементов списка.
# Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока
# пользователь сам не остановит работу скрипта, введя, например, команду «stop».
# При этом скрипт завершается, сформированный список с числами выводится на экран.
# Подсказка: для этого задания примем, что пользователь может вводить только числа и строки.
# Во время ввода пользователем очередного элемента необходимо реализовать проверку типа элемента.
# Вносить его в список, только если введено число.
# Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить соответствующее сообщение.
# При этом работа скрипта не должна завершаться.

class NotNumber(Exception):
    def __init__(self, txt):
        self.txt = txt


def check_is_number(str):
    decimal_point_amount = 0
    number_string = str.strip()
    for char in number_string:
        if char == '-' and number_string[0] == '-':
            continue
        if char == '.' and decimal_point_amount == 0:
            decimal_point_amount += 1
            continue
        if not char.isdecimal():
            raise NotNumber(f"{str} - не число")


user_input = ""
number_list = []
while user_input != "stop":
    user_input = input("введите число (например '15.3'), чтобы выйти введите 'stop': ")
    if user_input == 'stop':
        break
    try:
        check_is_number(user_input)
        number_list.append(float(user_input))
    except NotNumber as exception:
        print(exception)

print(number_list)
